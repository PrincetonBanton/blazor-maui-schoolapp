@page "/list"
@inject HttpClient Http

@if (subjects == null)
{
    <p><em>Loading...</em></p>
}
else if (!subjects.Any())
{
    <p>No subjects found.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Subject Name</th>
                <th>Validation Status</th>
                <th>Action</th> <!-- New -->
            </tr>
        </thead>
        <tbody>
            @foreach (var subject in subjects)
            {
                <tr>
                    <td>@subject.Name</td>
                    <td>
                        @if (subject.IsValidated)
                        {
                            <span class="text-success">Validated</span>
                        }
                        else
                        {
                            <span class="text-danger">Not Validated</span>
                        }
                    </td>
                    <td>
                        @if (subject.IsValidated)
                        {
                            <NavLink class="btn btn-primary btn-sm" href="@($"/template/{subject.Id}")">
                                Open Template
                            </NavLink>

                        }
                        else
                        {
                            <NavLink class="btn btn-warning btn-sm"href="@($"/setup?id={subject.Id}")">
                                Setup Subject
                            </NavLink>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

@using System.Text.Json
@using SchoolApp.Shared.Models
@code {
    private List<Subject>? subjects;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            subjects = await Http.GetFromJsonAsync<List<Subject>>("api/subject");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading subjects: {ex.Message}");
        }
    }
}

