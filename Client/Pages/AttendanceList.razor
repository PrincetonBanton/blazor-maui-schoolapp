@page "/attendance/list"
@inject HttpClient Http
@inject IJSRuntime JS
@using SchoolApp.Shared.Models

<div class="mb-3">
    <select id="monthSelect" class="form-select w-25 d-inline-block" @bind="SelectedMonth">
        @for (int m = 1; m <= 12; m++)
        {
            <option value="@m">@((new DateTime(DateTime.Now.Year, m, 1)).ToString("MMMM"))</option>
        }
    </select>
</div>

<!-- Calendar -->
<div>
    @if (DaysInMonth.Any())
    {
        <div class="calendar-grid">
            @foreach (var day in DaysInMonth)
            {
                <div class="calendar-day" @onclick="() => OnDayClicked(day)">
                    <strong>@day.Day</strong><br />
                    @day.ToString("ddd")
                </div>
            }
        </div>
    }
</div>

<style>
    .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr); /* 7 days in a week */
        width: 100%;
        border: 1px solid #ccc;
    }

    .calendar-day {
        border: 1px solid #ccc;
        text-align: center;
        padding: 10px;
        min-height: 100px;
        cursor: pointer;
        transition: background 0.2s ease;
    }

        .calendar-day:hover {
            background-color: #f0f0f0;
        }
</style>

@code {
    private int _selectedMonth = DateTime.Now.Month;

    private int SelectedMonth
    {
        get => _selectedMonth;
        set
        {
            if (_selectedMonth != value)
            {
                _selectedMonth = value;
                LoadCalendar();
            }
        }
    }

    private List<DateTime> DaysInMonth { get; set; } = new();

    protected override void OnInitialized()
    {
        LoadCalendar();
    }

    private void LoadCalendar()
    {
        DaysInMonth = Enumerable.Range(1, DateTime.DaysInMonth(DateTime.Now.Year, SelectedMonth))
            .Select(day => new DateTime(DateTime.Now.Year, SelectedMonth, day))
            .ToList();
    }

    private async Task OnDayClicked(DateTime day)
    {
        await JS.InvokeVoidAsync("alert", day.ToString("MMMM dd, yyyy"));
    }
}
