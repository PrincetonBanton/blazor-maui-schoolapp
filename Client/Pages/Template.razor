@page "/template"
@page "/template/{SubjectId:guid}"

@inject HttpClient Http

<h3>Template</h3>

@if (Subject == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h4>@Subject.Name</h4>

    @if (Subject.Components != null && Subject.Components.Any())
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Component</th>
                    <th>% of Subject</th>
                    <th>Subcomponent</th>
                    <th>% of Component</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var component in Subject.Components)
                {
                    int subCount = component.Subcomponents?.Count ?? 1;

                    for (int i = 0; i < subCount; i++)
                    {
                        var sub = component.Subcomponents != null && i < component.Subcomponents.Count
                        ? component.Subcomponents[i]
                        : null;

                        <tr>
                            @if (i == 0)
                            {
                                <td rowspan="@subCount">@component.Name</td>
                                <td rowspan="@subCount">@component.Percentage %</td>
                            }

                            @if (sub != null)
                            {
                                <td>@sub.Name</td>
                                <td>@sub.Percentage %</td>
                            }
                            else
                            {
                                <td colspan="2"><em>No subcomponents</em></td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
    else
    {
        <p><em>No components found for this subject.</em></p>
    }
}

@using SchoolApp.Shared.Models

@code {
    [Parameter]
    public Guid SubjectId { get; set; }

    private Subject? Subject;

    protected override async Task OnInitializedAsync()
    {
        if (SubjectId != Guid.Empty)
        {
            try
            {
                Subject = await Http.GetFromJsonAsync<Subject>($"api/subject/{SubjectId}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Failed to load subject: {ex.Message}");
            }
        }
    }
}
